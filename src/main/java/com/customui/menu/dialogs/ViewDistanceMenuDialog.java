package com.customui.menu.dialogs;

import com.customui.CustomUIPlugin;
import com.customui.config.ConfigManager;
import com.customui.menu.BaseMenuDialog;
import io.papermc.paper.dialog.DialogBuilder;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.format.NamedTextColor;
import net.kyori.adventure.text.format.TextDecoration;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.entity.Player;

public class ViewDistanceMenuDialog extends BaseMenuDialog {
    
    private int currentViewDistance = 12; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    public ViewDistanceMenuDialog(CustomUIPlugin plugin, ConfigManager configManager) {
        super(plugin, configManager, "viewdistance");
    }
    
    public ViewDistanceMenuDialog(CustomUIPlugin plugin, ConfigManager configManager, FileConfiguration config) {
        super(plugin, configManager, "viewdistance", config);
        this.currentViewDistance = config.getInt("options.default_distance", 12);
    }
    
    @Override
    protected void addButtons(DialogBuilder builder, Player player) {
        // –°–ª–∞–π–¥–µ—Ä –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ (8-24)
        for (int distance = 8; distance <= 24; distance++) {
            final int finalDistance = distance;
            NamedTextColor color = getDistanceColor(distance);
            String emoji = getDistanceEmoji(distance);
            
            builder.button(createButton(emoji + " " + distance + " —á–∞–Ω–∫–æ–≤", color), 
                    (clicker, result) -> {
                        setViewDistance(player, finalDistance);
                        currentViewDistance = finalDistance;
                        sendMessage(player, "–î–∏—Å—Ç–∞–Ω—Ü–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: " + finalDistance + " —á–∞–Ω–∫–æ–≤");
                        return Dialog.ActionResult.close();
                    });
        }
        
        // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        builder.button(createButton("‚ö° –ë—ã—Å—Ç—Ä–æ (8 —á–∞–Ω–∫–æ–≤)", NamedTextColor.RED), 
                (clicker, result) -> {
                    setViewDistance(player, 8);
                    currentViewDistance = 8;
                    sendMessage(player, "–î–∏—Å—Ç–∞–Ω—Ü–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: 8 —á–∞–Ω–∫–æ–≤ (–±—ã—Å—Ç—Ä–æ)");
                    return Dialog.ActionResult.close();
                });
        
        builder.button(createButton("üèÉ –û–±—ã—á–Ω–æ (12 —á–∞–Ω–∫–æ–≤)", NamedTextColor.YELLOW), 
                (clicker, result) -> {
                    setViewDistance(player, 12);
                    currentViewDistance = 12;
                    sendMessage(player, "–î–∏—Å—Ç–∞–Ω—Ü–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: 12 —á–∞–Ω–∫–æ–≤ (–æ–±—ã—á–Ω–æ)");
                    return Dialog.ActionResult.close();
                });
        
        builder.button(createButton("üö∂ –ú–µ–¥–ª–µ–Ω–Ω–æ (16 —á–∞–Ω–∫–æ–≤)", NamedTextColor.GREEN), 
                (clicker, result) -> {
                    setViewDistance(player, 16);
                    currentViewDistance = 16;
                    sendMessage(player, "–î–∏—Å—Ç–∞–Ω—Ü–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: 16 —á–∞–Ω–∫–æ–≤ (–º–µ–¥–ª–µ–Ω–Ω–æ)");
                    return Dialog.ActionResult.close();
                });
        
        builder.button(createButton("üêå –û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ (20 —á–∞–Ω–∫–æ–≤)", NamedTextColor.BLUE), 
                (clicker, result) -> {
                    setViewDistance(player, 20);
                    currentViewDistance = 20;
                    sendMessage(player, "–î–∏—Å—Ç–∞–Ω—Ü–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: 20 —á–∞–Ω–∫–æ–≤ (–æ—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ)");
                    return Dialog.ActionResult.close();
                });
        
        builder.button(createButton("ü¶• –ú–∞–∫—Å–∏–º—É–º (24 —á–∞–Ω–∫–∞)", NamedTextColor.LIGHT_PURPLE), 
                (clicker, result) -> {
                    setViewDistance(player, 24);
                    currentViewDistance = 24;
                    sendMessage(player, "–î–∏—Å—Ç–∞–Ω—Ü–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: 24 —á–∞–Ω–∫–∞ (–º–∞–∫—Å–∏–º—É–º)");
                    return Dialog.ActionResult.close();
                });
        
        // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        builder.button(createButton("‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å", NamedTextColor.GREEN, TextDecoration.BOLD), 
                (clicker, result) -> {
                    applyViewDistanceSettings(player);
                    sendMessage(player, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!");
                    return Dialog.ActionResult.close();
                });
        
        builder.button(createButton("üîÅ –°–±—Ä–æ—Å–∏—Ç—å", NamedTextColor.YELLOW, TextDecoration.BOLD), 
                (clicker, result) -> {
                    resetViewDistanceSettings(player);
                    sendMessage(player, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å–±—Ä–æ—à–µ–Ω—ã!");
                    return Dialog.ActionResult.close();
                });
        
        builder.button(createButton("‚ùå –û—Ç–º–µ–Ω–∞", NamedTextColor.RED, TextDecoration.BOLD), 
                (clicker, result) -> {
                    sendMessage(player, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã!");
                    return Dialog.ActionResult.close();
                });
    }
    
    private NamedTextColor getDistanceColor(int distance) {
        if (distance <= 10) return NamedTextColor.RED;
        if (distance <= 14) return NamedTextColor.YELLOW;
        if (distance <= 18) return NamedTextColor.GREEN;
        if (distance <= 22) return NamedTextColor.BLUE;
        return NamedTextColor.LIGHT_PURPLE;
    }
    
    private String getDistanceEmoji(int distance) {
        if (distance <= 8) return "‚ö°";
        if (distance <= 12) return "üèÉ";
        if (distance <= 16) return "üö∂";
        if (distance <= 20) return "üêå";
        return "ü¶•";
    }
    
    private void setViewDistance(Player player, int distance) {
        String action = getString("actions.set_distance", "");
        if (!action.isEmpty()) {
            executeAction(player, action.replace("%distance%", String.valueOf(distance)));
        }
    }
    
    private void applyViewDistanceSettings(Player player) {
        String action = getString("actions.apply", "");
        if (!action.isEmpty()) {
            executeAction(player, action);
        }
    }
    
    private void resetViewDistanceSettings(Player player) {
        String action = getString("actions.reset", "");
        if (!action.isEmpty()) {
            executeAction(player, action);
        }
    }
}